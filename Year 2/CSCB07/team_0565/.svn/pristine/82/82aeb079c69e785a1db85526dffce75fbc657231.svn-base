package backend;

import java.io.*;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.HashMap;

/**
 * A Class that represent a <code>AdminDatabase</code>.
 * 
 * @author Mandy
 *
 */
public class AdminDatabase extends Database{
  
  private String filepath = "Users/Mandy/test.ser";
  private HashMap<String, Admin> admins;

  /**
   * Creates a new instance of a <code>AdminDatabase</code>.
   * 
   * @param filepath
   *          the pathname of the file to read and store the data from
   */
  public AdminDatabase(String filepath) {
    this.admins = deserialize();
  }
  
    // change this to match UNIX/LINUX paths
    Path path = Paths.get("C:\\Users\\Mandy\\workspace\\p2\\Admin.ser");

  /**
   * Deserializes the file storing the serialized <code>HashMap</code> for the
   * AdminDatabase.
   * 
   * @param filepath
   *          the location of the file to read
   * @return the HashMap that stores all the Admins
   */    
    public HashMap<String, Flight> deserialize() {
      HashMap<String, Flight> object = null;     
      try {
            FileInputStream fileIn = new FileInputStream(filepath);
            ObjectInputStream in = new ObjectInputStream(fileIn);
            object = (HashMap<String, Admin>) in.readObject();
            in.close();
            fileIn.close();
            }catch(IOException i) {
               i.printStackTrace();
               return;
            }catch(ClassNotFoundException c) {
               System.out.println("Admin class not found");
               c.printStackTrace();
               return;
            }
      }// SerializeHashMap

  /**
   * Serializes the HashMap to a file.
   * 
   * @param admins
   *          the HashMap to be serialized
   * @param filepath
   *          the location of the file
   */
    public void serialize(HashMap<String,Admin> adminHash) {
      try {
         FileOutputStream fileOut = new FileOutputStream(filepath);
         ObjectOutputStream out = new ObjectOutputStream(fileOut);
         out.writeObject(admins);
         out.close();
         fileOut.close();
      }catch(IOException i) {
         i.printStackTrace();
      }
    } // end SerializeAdminHash

} // end AdminDatabase
