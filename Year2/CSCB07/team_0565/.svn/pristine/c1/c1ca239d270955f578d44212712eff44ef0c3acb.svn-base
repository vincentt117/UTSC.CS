package backend;

import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

/**
 * A class that represents a <code> Flight </code>.
 * 
 * @author lovehela
 *
 */
public class Flight extends Trip {

  private static final long serialVersionUID = 1L;
  private String flightNumber;
  private String airline;
  private long tripDuration;

  /**
   * Creates a new instance of <code> Flight </code>.
   * 
   * @param flightNumber
   *          unique flight number of flight
   * @param departureTime
   *          departure time of flight
   * @param arrivalTime
   *          arrival time of flight
   * @param airline
   *          airline company of flight
   * @param origin
   *          place of origin of flight
   * @param destination
   *          place of destination of flight
   * @param cost
   *          cost of flight ticket
   */
  public Flight(String flightNumber, Date departureTime, Date arrivalTime, String airline,
      String origin, String destination, double cost) {
    super(departureTime, arrivalTime, origin, destination, cost);
    this.flightNumber = flightNumber;
    this.airline = airline;
    this.tripDuration = arrivalTime.getTime() - departureTime.getTime();
  }

  /**
   * Returns the representation of the unique flight id given to the flights.
   * 
   * @return the flightNumber Returns the flight number as a unique alphanumeric
   *         String
   */
  public String getFlightNumber() {
    return flightNumber;
  }

  // I don't think that we should have this because the flight number is a id
  // Ids are ususally not changed but I decided to add it in a commentin case
  // different design decision later
  /// **
  // * Sets the flightNumber using the String given
  // *
  // * @param flightNumber
  // * A unique alphanumeric String used to identify the flights
  // */
  // public void setFlightNumber(String flightNumber) {
  // this.flightNumber = flightNumber;
  // }

  /**
   * Returns the amount of time in milliseconds that the trip takes.
   * 
   * @return tripDuration
   */
  public long getTripDuration() {
    return tripDuration;
  }

  /**
   * Returns the airline that the current flight runs by.
   * 
   * @return airline A String representing the company running that specific
   *         flight
   */
  public String getAirline() {
    return airline;
  }

  /**
   * Sets the airline of the flight to be a different value.
   * 
   * @param airline
   *          A string representing the company that runs the flight
   */
  public void setAirline(String airline) {
    this.airline = airline;
  }

  /*
   * (non-Javadoc)
   * 
   * @see java.lang.Object#hashCode()
   */
  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((airline == null) ? 0 : airline.hashCode());
    result = prime * result + ((flightNumber == null) ? 0 : flightNumber.hashCode());
    result = prime * result + (int) (tripDuration ^ (tripDuration >>> 32));
    return result;
  }

  /*
   * (non-Javadoc)
   * 
   * @see java.lang.Object#equals(java.lang.Object)
   */
  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }
    if (!super.equals(obj)) {
      return false;
    }
    if (getClass() != obj.getClass()) {
      return false;
    }
    Flight other = (Flight) obj;
    if (airline == null) {
      if (other.airline != null) {
        return false;
      }
    } else if (!airline.equals(other.airline)) {
      return false;
    }
    if (flightNumber == null) {
      if (other.flightNumber != null) {
        return false;
      }
    } else if (!flightNumber.equals(other.flightNumber)) {
      return false;
    }
    if (tripDuration != other.tripDuration) {
      return false;
    }
    return true;
  }

  /*
   * (non-Javadoc)
   * 
   * @see java.lang.Object#toString()
   */
  @Override
  public String toString() {

      // ANYA FIX
      
      DateFormat date = new SimpleDateFormat("yyyy-MM-dd");
      DateFormat dateTime = new SimpleDateFormat("yyyy-MM-dd HH:mm");

      return flightNumber + ";" + dateTime.format(this.getDepartureTime()) + ";" + dateTime.format(this.getArrivalTime()) + ";"
	  + airline + ";" + this.getOrigin() + ";" + this.getDestination().trim();


    // I decided that the string representation should be the file
    // representation of this object as shown in the handout
      //return flightNumber + ";" + this.getDepartureTime() + ";" + this.getArrivalTime() + ";"
      //  + airline + ";" + this.getOrigin() + ";" + this.getDestination();

  }

}
